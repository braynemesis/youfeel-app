#!/usr/bin/env node

import fs from 'fs';
import path from 'path';

console.log('üîç Verificando configura√ß√£o do YouFeel...\n');

// Verificar Node.js
console.log(`üì¶ Node.js: ${process.version}`);

try {
  if (fs.existsSync('node_modules')) {
    console.log('‚úÖ node_modules encontrado');
  } else {
    console.log('‚ùå node_modules n√£o encontrado - execute: npm install');
    process.exit(1);
  }

  // Verificar arquivo .env
  if (fs.existsSync('.env')) {
    console.log('‚úÖ Arquivo .env encontrado');
    
    const envContent = fs.readFileSync('.env', 'utf8');
    
    if (envContent.includes('YOUTUBE_API_KEY=') && !envContent.includes('sua_chave_youtube_aqui')) {
      console.log('‚úÖ YouTube API configurada');
    } else {
      console.log('‚ö†Ô∏è  YouTube API n√£o configurada');
    }
    
    if (envContent.includes('GEMINI_API_KEY=') && !envContent.includes('sua_chave_gemini_aqui')) {
      console.log('‚úÖ Gemini API configurada');
    } else {
      console.log('‚ö†Ô∏è  Gemini API n√£o configurada');
    }
  } else {
    console.log('‚ùå Arquivo .env n√£o encontrado');
    console.log('üìã Crie um arquivo .env com:');
    console.log('   YOUTUBE_API_KEY=sua_chave_aqui');
    console.log('   GEMINI_API_KEY=sua_chave_aqui');
    console.log('   PORT=3001');
    console.log('');
    console.log('üìñ Veja API_SETUP.md para instru√ß√µes detalhadas');
  }

  console.log('\nüöÄ Status: Configura√ß√£o verificada!');
  console.log('\nüìã Para executar:');
  console.log('1. Terminal 1: npm run dev');
  console.log('2. Terminal 2: npm run server:dev');
  console.log('3. Acesse: http://localhost:5173');

} catch (error) {
  console.error('‚ùå Erro na verifica√ß√£o:', error.message);
  process.exit(1);
}
